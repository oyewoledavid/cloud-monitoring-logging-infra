---
- name: Install Nginx
  apt:
    name: nginx
    state: present
    update_cache: yes

- name: Allow HTTP and HTTPS through UFW
  ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - "80"
    - "443"

- name: Install Certbot and Nginx plugin
  apt:
    name:
      - certbot
      - python3-certbot-nginx
    state: present

# üü° TEMPORARY HTTP CONFIG
- name: Deploy temporary HTTP-only Nginx config (for Certbot)
  template:
    src: nginx_http_only.conf.j2
    dest: /etc/nginx/sites-available/{{ domain_name }}
  notify: Reload Nginx

- name: Enable temporary site config
  file:
    src: /etc/nginx/sites-available/{{ domain_name }}
    dest: /etc/nginx/sites-enabled/{{ domain_name }}
    state: link
    force: yes

- name: Disable default Nginx site if exists
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Ensure Nginx is started before Certbot
  systemd:
    name: nginx
    state: started
    enabled: yes

# ‚úÖ CERTBOT SSL
- name: Obtain SSL certificate with Certbot
  shell: |
    certbot --nginx -d {{ domain_name }} --non-interactive --agree-tos -m {{ email_address }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}

# üîÅ FINAL FULL HTTPS CONFIG
- name: Deploy final Nginx config with HTTPS reverse proxy
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{ domain_name }}
  notify: Reload Nginx

- name: Re-enable final config (same path, just updated)
  file:
    src: /etc/nginx/sites-available/{{ domain_name }}
    dest: /etc/nginx/sites-enabled/{{ domain_name }}
    state: link
    force: yes

- name: Ensure Nginx is running with updated config
  systemd:
    name: nginx
    state: restarted
    enabled: yes
